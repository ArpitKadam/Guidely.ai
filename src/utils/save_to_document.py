import os
import datetime
from src.logger import logger


def save_document(response_text: str, directory: str = "./output") -> str | None:
    """
    Export a travel plan to a Markdown file with enhanced formatting and metadata.

    Parameters
    ----------
    response_text : str
        The travel plan content generated by the AI.
    directory : str, optional
        The directory where the markdown file will be saved. Default is './output'.

    Returns
    -------
    str | None
        The path to the saved Markdown file, or None if saving fails.
    """
    try:
        # Ensure output directory exists
        os.makedirs(directory, exist_ok=True)

        # Generate timestamp for filename and metadata
        timestamp = datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
        filename = os.path.join(directory, f"Guidely_{timestamp}.md")

        # Construct markdown content with creative formatting
        markdown_content = f"""---
            title: "🌍 Guidely.ai Travel Plan"
            author: "Arpit Kadam"
            date: {datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")}
            ---

            # 🌍 Welcome to Guidely.ai – Your Personalized Travel Planner

            **Generated:** {datetime.datetime.now().strftime('%A, %d %B %Y at %H:%M')}  
            **Created by:** Arpit Kadam

            ---

            {response_text}

            ---

            *This travel plan was generated by AI. Always verify details such as prices, operating hours, and travel requirements before your trip.*

            **Happy travels! ✈️🌴🌄**
            """

        # Write markdown content to file
        with open(filename, 'w', encoding='utf-8') as f:
            f.write(markdown_content)

        logger.info(f"Travel plan successfully saved: {filename}")
        return filename

    except Exception as e:
        logger.exception("Failed to save travel plan markdown file")
        return None
